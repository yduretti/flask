repos:

  # black
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        args: # Arguments to configure black
          - --line-length=79
          - --include='\.pyi?$'

          # These folders won't be formatted by black
          - --exclude="""\.git |
            \.__pycache__|
            \.hg|
            \.mypy_cache|
            \.tox|
            \.venv|
            _build|
            buck-out|
            build|
            dist"""

        language: system
        #language_version: python3.11

  # flake8
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: # Arguments to configure flake8
          # Making isort line length compatible with black
          - --max-line-length=79
          - --max-complexity=10
          # - --select=B,C,E,F,W,T4,B9

          # These are errors that will be ignored by flake8
          # Check out their meaning here
          # https://flake8.pycqa.org/en/latest/user/error-codes.html
          # https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
          # - --ignore=E203,E266,E501,W503,F403,F401,E402
          - --ignore=E203,W503

        language: system

  ## isort
  #- repo: https://github.com/pycqa/isort
  #  rev: 5.10.1
  #  hooks:
  #    - id: isort
  #      args:
  #        - --line-length=79
  #        - --profile=black

  # pre-commit-hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files # Prevent giant files from being committed.
      - id: check-ast # Simply check whether the files parse as valid python.
      - id: check-builtin-literals # Require literal syntax when initializing empty or zero Python builtin types.
      - id: check-case-conflict # Check for files that would conflict in case-insensitive filesystems.
      - id: check-docstring-first # Checks a common error of defining a docstring after code.
      - id: check-executables-have-shebangs # Ensures that (non-binary) executables have a shebang.
      - id: check-json # This hook checks json files for parseable syntax.
      - id: check-merge-conflict # Check for files that contain merge conflict strings.
      - id: check-shebang-scripts-are-executable # Ensures that (non-binary) files with a shebang are executable.
      - id: check-symlinks # Checks for symlinks which do not point to anything.
      - id: check-toml # This hook checks toml files for parseable syntax.
      - id: check-vcs-permalinks # Ensures that links to vcs websites are permalinks.
      - id: check-xml # This hook checks xml files for parseable syntax.
      - id: check-yaml # This hook checks yaml files for parseable syntax.
      - id: debug-statements # Check for debugger imports and py37+ `breakpoint()` calls in python source.
      - id: destroyed-symlinks # Detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
      - id: detect-aws-credentials # Detects *your* aws credentials from the aws cli credentials file.
      - id: detect-private-key # Detects the presence of private keys.
      # - id: double-quote-string-fixer # This hook replaces double quoted strings with single quoted strings.
      - id: end-of-file-fixer # Ensures that a file is either empty, or ends with one newline.
      - id: file-contents-sorter # Sort the lines in specified files (defaults to alphabetical). You must provide list of target files as input in your .pre-commit-config.yaml file.
      - id: fix-byte-order-marker # Removes UTF-8 byte order marker.
      - id: fix-encoding-pragma # Add # -*- coding: utf-8 -*- to the top of python files.
      - id: forbid-new-submodules # Prevent addition of new git submodules.
      - id: mixed-line-ending # Replaces or checks mixed line ending.
      - id: name-tests-test # This verifies that test files are named correctly.
      - id: no-commit-to-branch # Protect committing to specific branches by name or pattern. Branches `master` and `main` protected by default.
      - id: pretty-format-json # This hook sets a standard for formatting JSON files.
      - id: requirements-txt-fixer # Sorts entries in requirements.txt.
      - id: sort-simple-yaml # Sorts simple YAML files which consist only of top-level keys, preserving comments and blocks.
      - id: trailing-whitespace # This hook trims trailing whitespace.
      
# repos:
# -   repo: https://github.com/pre-commit/pre-commit-hooks
#     rev: v2.3.0
#     hooks:
#     -   id: check-yaml
#     -   id: end-of-file-fixer
#     -   id: trailing-whitespace
# -   repo: https://github.com/psf/black
#     rev: 22.10.0
#     hooks:
#     -   id: black